{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Data Mining \u00b6 Definisi \u00b6 Dengan perkembangan jumlah data yang pesat disebabkan oleh adanya perkembangan teknologi informasi, sehingga hal ini yang memungkinkan data terkumpul dalam jumlah besar. Transaksi data yang dilakukan secara digital telah berkembang secara pesat diberbagai sektor bisnis. Perkembangan internet yang cukup cepat juga memiliki kontribusi dalam hal terciptanya data yang sangat besar. Fenomena ini secara signifikan berdampak pada terjadinya data transaksi yang sangat tinggi dari sisi volume dan jenis data telah dihasilkan. Bersamaan dengan kejadian ini memungkinkan terjadinya kondisi yang disebut dengan istilah kaya data tetapi miskin pengetahuan, disebabkan dengan adanya banyak data yang terkumpul tetapi sedikit dengan manfaat yang diperoleh dari besarnya data tersebut untuk kebutuhan bisnis dan lain sebgainya. Dengan data yang melimpah ini butuh suatu metode analisis data secara otomatis dari data yang berjumlah besar atau kompleks dengan tujuan untuk menemukan pola atau kecenderungan yang penting yang biasanya tidak disadari keberadaannya. Data mining merupakan merupakan subjek yang melibatkan berbagai disiplin bidang yang bertujuan bagaimana mendapatkan pengetahuan/informasi dari tumpukan data. Jika dianalogikan adalah seperti penambangan secara konvensianol misalkan menambang emas yang didapatkan dari tumpukan batu, tanah dan pasir ( link video ). Jadi penekanan dari istilah penambangan adalah proses menemukan sesuatu yang berharga dari bahan-bahan mentah yang ada. Dalam kontek penambangan data adalah bagaimana mendapatkan informasi yang berharga untuk pijakan pengambilan keputusan atau tujuan tertentu. Dalama proses data mining melibatkan teknik statistik, matematika, kecerdasan buatan, machine learning untuk mengekstraksi dan mengidentifikasi informasi yang bermanfaat dan pengetahuan yang terkait dari berbagai database besar. Terdapat beberapa istilah lain yang memiliki makna sama dengan data mining, yaitu Knowledge discovery in databases (KDD) , ekstraksi pengetahuan (knowledge extraction) , Analisa data/pola (data/pattern analysis) , kecerdasan bisnis (business intelligence) dan data archaeology dan data dredging (Larose, 2005) Keunggulan \u00b6 Studi statistik tradisional menggunakan informasi masa lalu untuk menentukan keadaan sistem di masa depan (sering disebut prediksi), sedangkan studi penambangan data menggunakan informasi masa lalu untuk membangun pola yang berdasarkan tidak hanya pada input data tetapi juga pada konsekuensi logis dari data tersebut. Proses ini juga disebut prediksi, tetapi mengandung elemen penting yang tidak ditemukan dalam analisis statistik: kemampuan untuk memberikan ekspresi tentang yang mungkin terjadi di masa depan, dibandingkan dengan apa yang ada di masa lalu (berdasarkan asumsi dari metode statistik). Dibandingkan dengan studi statistik tradisional, yang sering melihat ke belakang, bidang data mining menemukan pola dan klasifikasi yang melihat dan bahkan memprediksi masa depan. Secara singkat. Data mining dapat memberikan pemahaman data yang lebih lengkap dengan menemukan pola yang sebelumnya tidak terlihat dan Membuat model yang untuk memprediksi, sehingga memungkinkan orang untuk membuat keputusan yang lebih baik, sebagai acuan tindakan untuk yang akan datang dalam membuat keputusan Mean (Nilai Rata-Rata) Yang dimaksud mean atau nilai rata-rata adalah jumlah seluruh data dibagi dengan banyaknya data. Cara menghitung mean adalah dengan menggunakan rumus menghitung nilai rata-rata dari sekumpulan data sebagai berikut. Median (Nilai Tengah) Yang dimaksud median adalah nilai data yang letaknya di tengah dari data yang telah diurutkan dari nilai terkecil sampai nilai terbesar. Biasanya median diberi simbol Me. Cara Menghitung Median dengan Banyaknya Data Ganjil Pada data yang banyaknya ganjil maka ada satu data di tepat tengah data yang telah diurutkan. Jika banyaknya data ganjil, maka median adalah data yang letaknya tepat di tengah sekumpulan data yang telah diurutkan tersebut . Misalkan kita akan menghitung median dari 11 data berikut: 21, 27, 23, 25, 21, 28, 24, 27, 26, 25, 21 Urutan data dari yang terkecil: 21, 21, 21, 23, 24, 25 , 25, 26, 27, 27, 28 Median adalah data yang di tengah urutan yaitu 25 Cara Menghitung Median dengan Banyaknya Data Genap Pada data yang banyaknya genap maka ada dua data di tepat tengah data yang telah diurutkan. Jika banyaknya data genap, maka median data adalah rata-rata kedua data yang letaknya tepat di tengah sekumpulan data yang telah diurutkan tersebut . Misalkan kita akan menghitung median dari 12 data berikut: 24, 33, 47, 60, 30, 24, 25, 35, 49, 41, 52, 58, Urutan data dari yang terkecil: 24, 24, 25, 30, 33, 35 , 41 , 47, 49, 52, 58, 60 Median adalah rata-rata dua data di tengah = (35+41)/2 = 76/2 = 38 Modus Yang dimaksud modus adalah data yang paling sering muncul atau yang memiliki frekuensi terbanyak dari sekumpulan data. Biasanya modus diberi simbol Mo. Cara menentukan modus adalah dengan menghitung frekuensi semua data lalu memilih data yang frekuensi munculnya terbesar. Misalkan kita akan menghitung modus dari 10 data berikut: 7, 9, 8, 10, 6, 8, 6, 8, 7, 8 Dari data tersebut angka 8 muncul paling sering yaitu empat kali, angka 6 dan 7 muncul dua kali, sedangkan angka 9 dan 10 muncul sekali. Maka modusnya adalah 8. Kuartil Yang dimaksud dengan kuartil adalah data yang membagi posisi sekumpulan data yang telah diurutkan menjadi empat bagian. Dalam satu urutan data terdapat 3 kuartil yaitu kuartil bawah, kuartil tengah, dan kuartil atas. Cara menentukan kuartil adalah sebagai berikut. Kuartil bawah adalah data pada posisi \u00bc dari kumpulan data yang telah diurutkan. Kuartil bawah disimbolkan dengan Q1. Kuartil tengah adalah data pada posisi 2/4 dari kumpulan data yang telah diurutkan. Kuartil tengah sama dengan median. Kuartil tengah disimbolkan dengan Q2. Kuartil atas adalah data pada posisi \u00be dari kumpulan data yang telah diurutkan. Kuartil atas disimbolkan dengan Q3. Posisi ketiga kuartil ditentukan dari rumus berikut. Posisi Qi = i(n+1)/4 i = indeks kuartil yaitu 1, 2, 3 dan n = banyaknya data Misalkan kita akan menentukan kuartil bawah, tengah, dan kuartil atas dari 15 data berikut: 11, 24, 12, 15, 12, 18, 22, 25, 26, 27, 17, 22, 24, 19, 12. Urutan data dari yang terkecil: 11, 12, 12, 12, 15, 17, 18, 19, 22, 22, 24, 24, 25, 26, 27 Posisi ketiga kuartil adalah sebagai berikut Posisi Q1 = 1.(15+1)/4 = (16)/4 = 4 (data urutan ke 4) Posisi Q2 = 2. (15+1)/4 = 2(16)/4 = 8 (data urutan ke 4) Posisi Q3 = 3. (15+1)/4 = 3(16)/4 = 12 (data urutan ke 4) Berdasarkan posisi kuartil pada urutan data maka dapat ditentukan ketiga kuartil 11, 12, 12, 12 , 15, 17, 18, 19 , 22, 22, 24, 24 , 25, 26, 27 Jadi : kuartil bawah adalah 12 Kuartil tengah = median = 19 Kuartil atas = 24 Ragam (variansi) Ragam adalah rata-rata selisih kuadrat antara nilai-nilai individual dengan nilai tengahnya. Maka untuk mencari ragam adalah : jadi, ragam dari table nilai diatas adalah 9,75 Simpangan Baku Simpangan baku adalah ukuran sebaran statistic yang paling lazim, atau didefinisikan juga sebagaia karkuadratvarians. Maka untuk mencari simpangan baku adalah : Jadi simpangan bakunya adalah 3,12 Kemiringan kurva (Skewnes) Merupakan derajat ketidak simetrian (keasimetrian), atau dapat juga disefinisikan sebagai penyimpangan dari kesimetrian dari suatu distribusi. Maka untuk mencari nilai skewnes adalah Karena nilai SK nya 0,09 ( SK > 0 ) maka kurvanya mengarah ke kanan","title":"Orientation"},{"location":"#data-mining","text":"","title":"Data Mining"},{"location":"#definisi","text":"Dengan perkembangan jumlah data yang pesat disebabkan oleh adanya perkembangan teknologi informasi, sehingga hal ini yang memungkinkan data terkumpul dalam jumlah besar. Transaksi data yang dilakukan secara digital telah berkembang secara pesat diberbagai sektor bisnis. Perkembangan internet yang cukup cepat juga memiliki kontribusi dalam hal terciptanya data yang sangat besar. Fenomena ini secara signifikan berdampak pada terjadinya data transaksi yang sangat tinggi dari sisi volume dan jenis data telah dihasilkan. Bersamaan dengan kejadian ini memungkinkan terjadinya kondisi yang disebut dengan istilah kaya data tetapi miskin pengetahuan, disebabkan dengan adanya banyak data yang terkumpul tetapi sedikit dengan manfaat yang diperoleh dari besarnya data tersebut untuk kebutuhan bisnis dan lain sebgainya. Dengan data yang melimpah ini butuh suatu metode analisis data secara otomatis dari data yang berjumlah besar atau kompleks dengan tujuan untuk menemukan pola atau kecenderungan yang penting yang biasanya tidak disadari keberadaannya. Data mining merupakan merupakan subjek yang melibatkan berbagai disiplin bidang yang bertujuan bagaimana mendapatkan pengetahuan/informasi dari tumpukan data. Jika dianalogikan adalah seperti penambangan secara konvensianol misalkan menambang emas yang didapatkan dari tumpukan batu, tanah dan pasir ( link video ). Jadi penekanan dari istilah penambangan adalah proses menemukan sesuatu yang berharga dari bahan-bahan mentah yang ada. Dalam kontek penambangan data adalah bagaimana mendapatkan informasi yang berharga untuk pijakan pengambilan keputusan atau tujuan tertentu. Dalama proses data mining melibatkan teknik statistik, matematika, kecerdasan buatan, machine learning untuk mengekstraksi dan mengidentifikasi informasi yang bermanfaat dan pengetahuan yang terkait dari berbagai database besar. Terdapat beberapa istilah lain yang memiliki makna sama dengan data mining, yaitu Knowledge discovery in databases (KDD) , ekstraksi pengetahuan (knowledge extraction) , Analisa data/pola (data/pattern analysis) , kecerdasan bisnis (business intelligence) dan data archaeology dan data dredging (Larose, 2005)","title":"Definisi"},{"location":"#keunggulan","text":"Studi statistik tradisional menggunakan informasi masa lalu untuk menentukan keadaan sistem di masa depan (sering disebut prediksi), sedangkan studi penambangan data menggunakan informasi masa lalu untuk membangun pola yang berdasarkan tidak hanya pada input data tetapi juga pada konsekuensi logis dari data tersebut. Proses ini juga disebut prediksi, tetapi mengandung elemen penting yang tidak ditemukan dalam analisis statistik: kemampuan untuk memberikan ekspresi tentang yang mungkin terjadi di masa depan, dibandingkan dengan apa yang ada di masa lalu (berdasarkan asumsi dari metode statistik). Dibandingkan dengan studi statistik tradisional, yang sering melihat ke belakang, bidang data mining menemukan pola dan klasifikasi yang melihat dan bahkan memprediksi masa depan. Secara singkat. Data mining dapat memberikan pemahaman data yang lebih lengkap dengan menemukan pola yang sebelumnya tidak terlihat dan Membuat model yang untuk memprediksi, sehingga memungkinkan orang untuk membuat keputusan yang lebih baik, sebagai acuan tindakan untuk yang akan datang dalam membuat keputusan Mean (Nilai Rata-Rata) Yang dimaksud mean atau nilai rata-rata adalah jumlah seluruh data dibagi dengan banyaknya data. Cara menghitung mean adalah dengan menggunakan rumus menghitung nilai rata-rata dari sekumpulan data sebagai berikut. Median (Nilai Tengah) Yang dimaksud median adalah nilai data yang letaknya di tengah dari data yang telah diurutkan dari nilai terkecil sampai nilai terbesar. Biasanya median diberi simbol Me. Cara Menghitung Median dengan Banyaknya Data Ganjil Pada data yang banyaknya ganjil maka ada satu data di tepat tengah data yang telah diurutkan. Jika banyaknya data ganjil, maka median adalah data yang letaknya tepat di tengah sekumpulan data yang telah diurutkan tersebut . Misalkan kita akan menghitung median dari 11 data berikut: 21, 27, 23, 25, 21, 28, 24, 27, 26, 25, 21 Urutan data dari yang terkecil: 21, 21, 21, 23, 24, 25 , 25, 26, 27, 27, 28 Median adalah data yang di tengah urutan yaitu 25 Cara Menghitung Median dengan Banyaknya Data Genap Pada data yang banyaknya genap maka ada dua data di tepat tengah data yang telah diurutkan. Jika banyaknya data genap, maka median data adalah rata-rata kedua data yang letaknya tepat di tengah sekumpulan data yang telah diurutkan tersebut . Misalkan kita akan menghitung median dari 12 data berikut: 24, 33, 47, 60, 30, 24, 25, 35, 49, 41, 52, 58, Urutan data dari yang terkecil: 24, 24, 25, 30, 33, 35 , 41 , 47, 49, 52, 58, 60 Median adalah rata-rata dua data di tengah = (35+41)/2 = 76/2 = 38 Modus Yang dimaksud modus adalah data yang paling sering muncul atau yang memiliki frekuensi terbanyak dari sekumpulan data. Biasanya modus diberi simbol Mo. Cara menentukan modus adalah dengan menghitung frekuensi semua data lalu memilih data yang frekuensi munculnya terbesar. Misalkan kita akan menghitung modus dari 10 data berikut: 7, 9, 8, 10, 6, 8, 6, 8, 7, 8 Dari data tersebut angka 8 muncul paling sering yaitu empat kali, angka 6 dan 7 muncul dua kali, sedangkan angka 9 dan 10 muncul sekali. Maka modusnya adalah 8. Kuartil Yang dimaksud dengan kuartil adalah data yang membagi posisi sekumpulan data yang telah diurutkan menjadi empat bagian. Dalam satu urutan data terdapat 3 kuartil yaitu kuartil bawah, kuartil tengah, dan kuartil atas. Cara menentukan kuartil adalah sebagai berikut. Kuartil bawah adalah data pada posisi \u00bc dari kumpulan data yang telah diurutkan. Kuartil bawah disimbolkan dengan Q1. Kuartil tengah adalah data pada posisi 2/4 dari kumpulan data yang telah diurutkan. Kuartil tengah sama dengan median. Kuartil tengah disimbolkan dengan Q2. Kuartil atas adalah data pada posisi \u00be dari kumpulan data yang telah diurutkan. Kuartil atas disimbolkan dengan Q3. Posisi ketiga kuartil ditentukan dari rumus berikut. Posisi Qi = i(n+1)/4 i = indeks kuartil yaitu 1, 2, 3 dan n = banyaknya data Misalkan kita akan menentukan kuartil bawah, tengah, dan kuartil atas dari 15 data berikut: 11, 24, 12, 15, 12, 18, 22, 25, 26, 27, 17, 22, 24, 19, 12. Urutan data dari yang terkecil: 11, 12, 12, 12, 15, 17, 18, 19, 22, 22, 24, 24, 25, 26, 27 Posisi ketiga kuartil adalah sebagai berikut Posisi Q1 = 1.(15+1)/4 = (16)/4 = 4 (data urutan ke 4) Posisi Q2 = 2. (15+1)/4 = 2(16)/4 = 8 (data urutan ke 4) Posisi Q3 = 3. (15+1)/4 = 3(16)/4 = 12 (data urutan ke 4) Berdasarkan posisi kuartil pada urutan data maka dapat ditentukan ketiga kuartil 11, 12, 12, 12 , 15, 17, 18, 19 , 22, 22, 24, 24 , 25, 26, 27 Jadi : kuartil bawah adalah 12 Kuartil tengah = median = 19 Kuartil atas = 24 Ragam (variansi) Ragam adalah rata-rata selisih kuadrat antara nilai-nilai individual dengan nilai tengahnya. Maka untuk mencari ragam adalah : jadi, ragam dari table nilai diatas adalah 9,75 Simpangan Baku Simpangan baku adalah ukuran sebaran statistic yang paling lazim, atau didefinisikan juga sebagaia karkuadratvarians. Maka untuk mencari simpangan baku adalah : Jadi simpangan bakunya adalah 3,12 Kemiringan kurva (Skewnes) Merupakan derajat ketidak simetrian (keasimetrian), atau dapat juga disefinisikan sebagai penyimpangan dari kesimetrian dari suatu distribusi. Maka untuk mencari nilai skewnes adalah Karena nilai SK nya 0,09 ( SK > 0 ) maka kurvanya mengarah ke kanan","title":"Keunggulan"},{"location":"Bio/","text":"Nama : Wildan Tamma Faza Chair \u00b6 NPM :170411100105 \u00b6","title":"Author"},{"location":"Bio/#nama-wildan-tamma-faza-chair","text":"","title":"Nama    : Wildan Tamma Faza Chair"},{"location":"Bio/#npm-170411100105","text":"","title":"NPM       :170411100105"},{"location":"TP1/","text":"Statistik Deskriptif \u00b6 (Mendeskripsikan Data) \u00b6 Menampilkan seluruh data dari kolom : from scipy import stats import pandas as pd pd . read_csv ( \"Unas.csv\" ) Output : Menampilkan jumlah data, rata-rata, nilai min, Q1, Q2, Q3, nilai max, kemencengan, standart deviasi, dan variasi : df = pd . read_csv ( \"Unas.csv\" ) for col in df . columns : print ( \"===\" , col , \"===\" ) print ( \"jumlah data keseluruhan \" , df [ col ] . count ()) print ( \"rata-rata \" , df [ col ] . mean ()) print ( \"nilai minimal \" , df [ col ] . min ()) print ( \"Q1 \" , df [ col ] . quantile ( 0.25 )) print ( \"Q2 \" , df [ col ] . quantile ( 0.5 )) print ( \"Q3 \" , df [ col ] . quantile ( 0.75 )) print ( \"Nilai Max \" , df [ col ] . max ()) print ( \"kemencengan\" , \"{0:.2f}\" . format ( round ( df [ col ] . skew (), 2 ))) print ( \"kemencengan \" , \"{0:.6f}\" . format ( round ( df [ col ] . skew (), 6 ))) print ( \"Standar Deviasi \" , \"{0:.2f}\" . format ( round ( df [ col ] . std (), 2 ))) print ( \"Variansi \" , \"{0:.2f}\" . format ( round ( df [ col ] . var (), 2 ))) Output : Menampilkan modus dari setiap data : from scipy import stats mode = stats . mode ( df ) print ( mode ) Output : Menampilkan Grafik : import numpy as np import seaborn as sns import matplotlib.pyplot as plt from scipy import stats for i in range ( 4 ): df = pd . read_csv ( \"Unas.csv\" , usecols = [ i ]) sns . distplot ( df ); Output :","title":"Statistik Deskriptif (TP1)"},{"location":"TP1/#statistik-deskriptif","text":"","title":"Statistik Deskriptif"},{"location":"TP1/#mendeskripsikan-data","text":"Menampilkan seluruh data dari kolom : from scipy import stats import pandas as pd pd . read_csv ( \"Unas.csv\" ) Output : Menampilkan jumlah data, rata-rata, nilai min, Q1, Q2, Q3, nilai max, kemencengan, standart deviasi, dan variasi : df = pd . read_csv ( \"Unas.csv\" ) for col in df . columns : print ( \"===\" , col , \"===\" ) print ( \"jumlah data keseluruhan \" , df [ col ] . count ()) print ( \"rata-rata \" , df [ col ] . mean ()) print ( \"nilai minimal \" , df [ col ] . min ()) print ( \"Q1 \" , df [ col ] . quantile ( 0.25 )) print ( \"Q2 \" , df [ col ] . quantile ( 0.5 )) print ( \"Q3 \" , df [ col ] . quantile ( 0.75 )) print ( \"Nilai Max \" , df [ col ] . max ()) print ( \"kemencengan\" , \"{0:.2f}\" . format ( round ( df [ col ] . skew (), 2 ))) print ( \"kemencengan \" , \"{0:.6f}\" . format ( round ( df [ col ] . skew (), 6 ))) print ( \"Standar Deviasi \" , \"{0:.2f}\" . format ( round ( df [ col ] . std (), 2 ))) print ( \"Variansi \" , \"{0:.2f}\" . format ( round ( df [ col ] . var (), 2 ))) Output : Menampilkan modus dari setiap data : from scipy import stats mode = stats . mode ( df ) print ( mode ) Output : Menampilkan Grafik : import numpy as np import seaborn as sns import matplotlib.pyplot as plt from scipy import stats for i in range ( 4 ): df = pd . read_csv ( \"Unas.csv\" , usecols = [ i ]) sns . distplot ( df ); Output :","title":"(Mendeskripsikan Data)"},{"location":"TP2/","text":"Jarak data \u00b6 (Menghitung jarak menggunakan metode Minkowski distance, manhattan distance dan Euclidean distance) \u00b6 Mengambil seluruh data dari kolom : from scipy import stats import math import pandas as pd import scipy.spatial.distance as spad pd . read_csv ( \"Wholesale.csv\" ) df = pd . read_csv ( \"Wholesale.csv\" ) Minkowski Distance def Minkowski ( i , j , r ): if i != j : hasil = 0 for t in df : rumus = ( df [ t ][ i ] - df [ t ][ j ]) ** r hasil = hasil + rumus h = 1 if hasil >= 0 : h = 1 else : h =- 1 hasil = math . pow ( hasil * h , 1 / r ) if h == 1 : h = - 1 else : h = 1 return hasil * h else : return 0 for xx in range ( len ( df ) - 1 ): for yy in range ( len ( df ) - 1 ): minkowski = Minkowski ( xx , yy , 3 ) print ( \"jarak baris\" , xx , \"dengan baris\" , yy , \"adalah :\" , minkowski ) Output: jarak baris 0 dengan baris 0 adalah : 0 jarak baris 0 dengan baris 1 adalah : -5480.689873966009 jarak baris 0 dengan baris 2 adalah : 3237.581069140631 jarak baris 0 dengan baris 3 adalah : -7461.742595976205 jarak baris 0 dengan baris 4 adalah : 10047.098110893226 jarak baris 0 dengan baris 5 adalah : -3738.913031133275 jarak baris 0 dengan baris 6 adalah : -6462.910826099552 jarak baris 0 dengan baris 7 adalah : -6073.226959188652 jarak baris 1 dengan baris 0 adalah : 5480.689873966009 jarak baris 1 dengan baris 1 adalah : 0 jarak baris 1 dengan baris 2 adalah : 5996.872285869209 jarak baris 1 dengan baris 3 adalah : -7799.092214077284 jarak baris 1 dengan baris 4 adalah : 15485.525015100427 jarak baris 1 dengan baris 5 adalah : -4362.292282746746 jarak baris 1 dengan baris 6 adalah : -5647.256811397118 jarak baris 1 dengan baris 7 adalah : -4845.047524177209 jarak baris 2 dengan baris 0 adalah : -3237.581069140631 jarak baris 2 dengan baris 1 adalah : -5996.872285869209 jarak baris 2 dengan baris 2 adalah : 0 jarak baris 2 dengan baris 3 adalah : -6964.16116161312 jarak baris 2 dengan baris 4 adalah : 16186.061719494764 jarak baris 2 dengan baris 5 adalah : -6381.619082291133 jarak baris 2 dengan baris 6 adalah : -7246.105207866862 jarak baris 2 dengan baris 7 adalah : -5823.20738002995 jarak baris 3 dengan baris 0 adalah : 7461.742595976205 jarak baris 3 dengan baris 1 adalah : 7799.092214077284 jarak baris 3 dengan baris 2 adalah : 6964.16116161312 jarak baris 3 dengan baris 3 adalah : 0 jarak baris 3 dengan baris 4 adalah : 9811.274871375139 jarak baris 3 dengan baris 5 adalah : 4778.4194734818675 jarak baris 3 dengan baris 6 adalah : -5474.994945288381 jarak baris 3 dengan baris 7 adalah : -4180.604599728656 jarak baris 4 dengan baris 0 adalah : -10047.098110893226 jarak baris 4 dengan baris 1 adalah : -15485.525015100427 jarak baris 4 dengan baris 2 adalah : -16186.061719494764 jarak baris 4 dengan baris 3 adalah : -9811.274871375139 jarak baris 4 dengan baris 4 adalah : 0 jarak baris 4 dengan baris 5 adalah : -13338.529991846272 jarak baris 4 dengan baris 6 adalah : -10921.49536627899 jarak baris 4 dengan baris 7 adalah : -15057.564752729737 jarak baris 5 dengan baris 0 adalah : 3738.913031133275 jarak baris 5 dengan baris 1 adalah : 4362.292282746746 jarak baris 5 dengan baris 2 adalah : 6381.619082291133 jarak baris 5 dengan baris 3 adalah : -4778.4194734818675 jarak baris 5 dengan baris 4 adalah : 13338.529991846272 jarak baris 5 dengan baris 5 adalah : 0 jarak baris 5 dengan baris 6 adalah : -4665.924444614662 jarak baris 5 dengan baris 7 adalah : 3510.2264620946376 jarak baris 6 dengan baris 0 adalah : 6462.910826099552 jarak baris 6 dengan baris 1 adalah : 5647.256811397118 jarak baris 6 dengan baris 2 adalah : 7246.105207866862 jarak baris 6 dengan baris 3 adalah : 5474.994945288381 jarak baris 6 dengan baris 4 adalah : 10921.49536627899 jarak baris 6 dengan baris 5 adalah : 4665.924444614662 jarak baris 6 dengan baris 6 adalah : 0 jarak baris 6 dengan baris 7 adalah : -3998.344963391233 jarak baris 7 dengan baris 0 adalah : 6073.226959188652 jarak baris 7 dengan baris 1 adalah : 4845.047524177209 jarak baris 7 dengan baris 2 adalah : 5823.20738002995 jarak baris 7 dengan baris 3 adalah : 4180.604599728656 jarak baris 7 dengan baris 4 adalah : 15057.564752729737 jarak baris 7 dengan baris 5 adalah : -3510.2264620946376 jarak baris 7 dengan baris 6 adalah : 3998.344963391233 jarak baris 7 dengan baris 7 adalah : 0 Manhattan Distance, m=1 def Manahattan ( i , j ): if i != j : hasil = 0 for fitur in df : rumus = df [ fitur ][ i ] - df [ fitur ][ j ] hasil = hasil + rumus return hasil else : return 0 for xx in range ( len ( df ) - 1 ): for yy in range ( len ( df ) - 1 ): manahattan = Manahattan ( xx , yy ) print ( \"jarak baris\" , xx , \"dengan baris\" , yy , \"adalah :\" , manahattan ) Output : jarak baris 0 dengan baris 0 adalah : 0 jarak baris 0 dengan baris 1 adalah : 846 jarak baris 0 dengan baris 2 adalah : -2498 jarak baris 0 dengan baris 3 adalah : 6732 jarak baris 0 dengan baris 4 adalah : -11988 jarak baris 0 dengan baris 5 adalah : 7402 jarak baris 0 dengan baris 6 adalah : 7647 jarak baris 0 dengan baris 7 adalah : 4595 jarak baris 1 dengan baris 0 adalah : -846 jarak baris 1 dengan baris 1 adalah : 0 jarak baris 1 dengan baris 2 adalah : -3344 jarak baris 1 dengan baris 3 adalah : 5886 jarak baris 1 dengan baris 4 adalah : -12834 jarak baris 1 dengan baris 5 adalah : 6556 jarak baris 1 dengan baris 6 adalah : 6801 jarak baris 1 dengan baris 7 adalah : 3749 jarak baris 2 dengan baris 0 adalah : 2498 jarak baris 2 dengan baris 1 adalah : 3344 jarak baris 2 dengan baris 2 adalah : 0 jarak baris 2 dengan baris 3 adalah : 9230 jarak baris 2 dengan baris 4 adalah : -9490 jarak baris 2 dengan baris 5 adalah : 9900 jarak baris 2 dengan baris 6 adalah : 10145 jarak baris 2 dengan baris 7 adalah : 7093 jarak baris 3 dengan baris 0 adalah : -6732 jarak baris 3 dengan baris 1 adalah : -5886 jarak baris 3 dengan baris 2 adalah : -9230 jarak baris 3 dengan baris 3 adalah : 0 jarak baris 3 dengan baris 4 adalah : -18720 jarak baris 3 dengan baris 5 adalah : 670 jarak baris 3 dengan baris 6 adalah : 915 jarak baris 3 dengan baris 7 adalah : -2137 jarak baris 4 dengan baris 0 adalah : 11988 jarak baris 4 dengan baris 1 adalah : 12834 jarak baris 4 dengan baris 2 adalah : 9490 jarak baris 4 dengan baris 3 adalah : 18720 jarak baris 4 dengan baris 4 adalah : 0 jarak baris 4 dengan baris 5 adalah : 19390 jarak baris 4 dengan baris 6 adalah : 19635 jarak baris 4 dengan baris 7 adalah : 16583 jarak baris 5 dengan baris 0 adalah : -7402 jarak baris 5 dengan baris 1 adalah : -6556 jarak baris 5 dengan baris 2 adalah : -9900 jarak baris 5 dengan baris 3 adalah : -670 jarak baris 5 dengan baris 4 adalah : -19390 jarak baris 5 dengan baris 5 adalah : 0 jarak baris 5 dengan baris 6 adalah : 245 jarak baris 5 dengan baris 7 adalah : -2807 jarak baris 6 dengan baris 0 adalah : -7647 jarak baris 6 dengan baris 1 adalah : -6801 jarak baris 6 dengan baris 2 adalah : -10145 jarak baris 6 dengan baris 3 adalah : -915 jarak baris 6 dengan baris 4 adalah : -19635 jarak baris 6 dengan baris 5 adalah : -245 jarak baris 6 dengan baris 6 adalah : 0 jarak baris 6 dengan baris 7 adalah : -3052 jarak baris 7 dengan baris 0 adalah : -4595 jarak baris 7 dengan baris 1 adalah : -3749 jarak baris 7 dengan baris 2 adalah : -7093 jarak baris 7 dengan baris 3 adalah : 2137 jarak baris 7 dengan baris 4 adalah : -16583 jarak baris 7 dengan baris 5 adalah : 2807 jarak baris 7 dengan baris 6 adalah : 3052 jarak baris 7 dengan baris 7 adalah : 0 Euclidean distance, m=2 def Euclidean ( i , j ): if i != j : hasil = 0 for fitur in df : rumus = ( df [ fitur ][ i ] - df [ fitur ][ j ]) ** 2 hasil += rumus hasil = math . sqrt ( hasil ) return hasil else : return 0 for xx in range ( len ( df ) - 1 ): for yy in range ( len ( df ) - 1 ): euclidienc = Euclidean ( xx , yy ) print ( \"jarak baris\" , xx , \"dengan baris\" , yy , \"adalah :\" , euclidienc ) Output : jarak baris 0 dengan baris 0 adalah : 0 jarak baris 0 dengan baris 1 adalah : 6206.256359513358 jarak baris 0 dengan baris 2 adalah : 9405.507429160853 jarak baris 0 dengan baris 3 adalah : 11238.189622888554 jarak baris 0 dengan baris 4 adalah : 12098.951194215142 jarak baris 0 dengan baris 5 adalah : 4412.718436519602 jarak baris 0 dengan baris 6 adalah : 6576.310135630771 jarak baris 0 dengan baris 7 adalah : 7451.170579177476 jarak baris 1 dengan baris 0 adalah : 6206.256359513358 jarak baris 1 dengan baris 1 adalah : 0 jarak baris 1 dengan baris 2 adalah : 6506.372107403634 jarak baris 1 dengan baris 3 adalah : 13062.954260043936 jarak baris 1 dengan baris 4 adalah : 16899.20737786243 jarak baris 1 dengan baris 5 adalah : 5589.1453729528275 jarak baris 1 dengan baris 6 adalah : 8905.393028945999 jarak baris 1 dengan baris 7 adalah : 4948.484313403448 jarak baris 2 dengan baris 0 adalah : 9405.507429160853 jarak baris 2 dengan baris 1 adalah : 6506.372107403634 jarak baris 2 dengan baris 2 adalah : 0 jarak baris 2 dengan baris 3 adalah : 13395.218400608479 jarak baris 2 dengan baris 4 adalah : 16988.51806368054 jarak baris 2 dengan baris 5 adalah : 7941.333389299306 jarak baris 2 dengan baris 6 adalah : 11064.063132502453 jarak baris 2 dengan baris 7 adalah : 6914.6618861662355 jarak baris 3 dengan baris 0 adalah : 11238.189622888554 jarak baris 3 dengan baris 1 adalah : 13062.954260043936 jarak baris 3 dengan baris 2 adalah : 13395.218400608479 jarak baris 3 dengan baris 3 adalah : 0 jarak baris 3 dengan baris 4 adalah : 11549.478602950005 jarak baris 3 dengan baris 5 adalah : 10011.995605272707 jarak baris 3 dengan baris 6 adalah : 7514.343683915449 jarak baris 3 dengan baris 7 adalah : 10222.735788427675 jarak baris 4 dengan baris 0 adalah : 12098.951194215142 jarak baris 4 dengan baris 1 adalah : 16899.20737786243 jarak baris 4 dengan baris 2 adalah : 16988.51806368054 jarak baris 4 dengan baris 3 adalah : 11549.478602950005 jarak baris 4 dengan baris 4 adalah : 0 jarak baris 4 dengan baris 5 adalah : 14532.786037095571 jarak baris 4 dengan baris 6 adalah : 12253.324650885572 jarak baris 4 dengan baris 7 adalah : 15669.684393758542 jarak baris 5 dengan baris 0 adalah : 4412.718436519602 jarak baris 5 dengan baris 1 adalah : 5589.1453729528275 jarak baris 5 dengan baris 2 adalah : 7941.333389299306 jarak baris 5 dengan baris 3 adalah : 10011.995605272707 jarak baris 5 dengan baris 4 adalah : 14532.786037095571 jarak baris 5 dengan baris 5 adalah : 0 jarak baris 5 dengan baris 6 adalah : 6248.778040545208 jarak baris 5 dengan baris 7 adalah : 6110.750772204672 jarak baris 6 dengan baris 0 adalah : 6576.310135630771 jarak baris 6 dengan baris 1 adalah : 8905.393028945999 jarak baris 6 dengan baris 2 adalah : 11064.063132502453 jarak baris 6 dengan baris 3 adalah : 7514.343683915449 jarak baris 6 dengan baris 4 adalah : 12253.324650885572 jarak baris 6 dengan baris 5 adalah : 6248.778040545208 jarak baris 6 dengan baris 6 adalah : 0 jarak baris 6 dengan baris 7 adalah : 5941.4292893208785 jarak baris 7 dengan baris 0 adalah : 7451.170579177476 jarak baris 7 dengan baris 1 adalah : 4948.484313403448 jarak baris 7 dengan baris 2 adalah : 6914.6618861662355 jarak baris 7 dengan baris 3 adalah : 10222.735788427675 jarak baris 7 dengan baris 4 adalah : 15669.684393758542 jarak baris 7 dengan baris 5 adalah : 6110.750772204672 jarak baris 7 dengan baris 6 adalah : 5941.4292893208785 jarak baris 7 dengan baris 7 adalah : 0","title":"Jarak Data (TP2)"},{"location":"TP2/#jarak-data","text":"","title":"Jarak data"},{"location":"TP2/#menghitung-jarak-menggunakan-metode-minkowski-distance-manhattan-distance-dan-euclidean-distance","text":"Mengambil seluruh data dari kolom : from scipy import stats import math import pandas as pd import scipy.spatial.distance as spad pd . read_csv ( \"Wholesale.csv\" ) df = pd . read_csv ( \"Wholesale.csv\" ) Minkowski Distance def Minkowski ( i , j , r ): if i != j : hasil = 0 for t in df : rumus = ( df [ t ][ i ] - df [ t ][ j ]) ** r hasil = hasil + rumus h = 1 if hasil >= 0 : h = 1 else : h =- 1 hasil = math . pow ( hasil * h , 1 / r ) if h == 1 : h = - 1 else : h = 1 return hasil * h else : return 0 for xx in range ( len ( df ) - 1 ): for yy in range ( len ( df ) - 1 ): minkowski = Minkowski ( xx , yy , 3 ) print ( \"jarak baris\" , xx , \"dengan baris\" , yy , \"adalah :\" , minkowski ) Output: jarak baris 0 dengan baris 0 adalah : 0 jarak baris 0 dengan baris 1 adalah : -5480.689873966009 jarak baris 0 dengan baris 2 adalah : 3237.581069140631 jarak baris 0 dengan baris 3 adalah : -7461.742595976205 jarak baris 0 dengan baris 4 adalah : 10047.098110893226 jarak baris 0 dengan baris 5 adalah : -3738.913031133275 jarak baris 0 dengan baris 6 adalah : -6462.910826099552 jarak baris 0 dengan baris 7 adalah : -6073.226959188652 jarak baris 1 dengan baris 0 adalah : 5480.689873966009 jarak baris 1 dengan baris 1 adalah : 0 jarak baris 1 dengan baris 2 adalah : 5996.872285869209 jarak baris 1 dengan baris 3 adalah : -7799.092214077284 jarak baris 1 dengan baris 4 adalah : 15485.525015100427 jarak baris 1 dengan baris 5 adalah : -4362.292282746746 jarak baris 1 dengan baris 6 adalah : -5647.256811397118 jarak baris 1 dengan baris 7 adalah : -4845.047524177209 jarak baris 2 dengan baris 0 adalah : -3237.581069140631 jarak baris 2 dengan baris 1 adalah : -5996.872285869209 jarak baris 2 dengan baris 2 adalah : 0 jarak baris 2 dengan baris 3 adalah : -6964.16116161312 jarak baris 2 dengan baris 4 adalah : 16186.061719494764 jarak baris 2 dengan baris 5 adalah : -6381.619082291133 jarak baris 2 dengan baris 6 adalah : -7246.105207866862 jarak baris 2 dengan baris 7 adalah : -5823.20738002995 jarak baris 3 dengan baris 0 adalah : 7461.742595976205 jarak baris 3 dengan baris 1 adalah : 7799.092214077284 jarak baris 3 dengan baris 2 adalah : 6964.16116161312 jarak baris 3 dengan baris 3 adalah : 0 jarak baris 3 dengan baris 4 adalah : 9811.274871375139 jarak baris 3 dengan baris 5 adalah : 4778.4194734818675 jarak baris 3 dengan baris 6 adalah : -5474.994945288381 jarak baris 3 dengan baris 7 adalah : -4180.604599728656 jarak baris 4 dengan baris 0 adalah : -10047.098110893226 jarak baris 4 dengan baris 1 adalah : -15485.525015100427 jarak baris 4 dengan baris 2 adalah : -16186.061719494764 jarak baris 4 dengan baris 3 adalah : -9811.274871375139 jarak baris 4 dengan baris 4 adalah : 0 jarak baris 4 dengan baris 5 adalah : -13338.529991846272 jarak baris 4 dengan baris 6 adalah : -10921.49536627899 jarak baris 4 dengan baris 7 adalah : -15057.564752729737 jarak baris 5 dengan baris 0 adalah : 3738.913031133275 jarak baris 5 dengan baris 1 adalah : 4362.292282746746 jarak baris 5 dengan baris 2 adalah : 6381.619082291133 jarak baris 5 dengan baris 3 adalah : -4778.4194734818675 jarak baris 5 dengan baris 4 adalah : 13338.529991846272 jarak baris 5 dengan baris 5 adalah : 0 jarak baris 5 dengan baris 6 adalah : -4665.924444614662 jarak baris 5 dengan baris 7 adalah : 3510.2264620946376 jarak baris 6 dengan baris 0 adalah : 6462.910826099552 jarak baris 6 dengan baris 1 adalah : 5647.256811397118 jarak baris 6 dengan baris 2 adalah : 7246.105207866862 jarak baris 6 dengan baris 3 adalah : 5474.994945288381 jarak baris 6 dengan baris 4 adalah : 10921.49536627899 jarak baris 6 dengan baris 5 adalah : 4665.924444614662 jarak baris 6 dengan baris 6 adalah : 0 jarak baris 6 dengan baris 7 adalah : -3998.344963391233 jarak baris 7 dengan baris 0 adalah : 6073.226959188652 jarak baris 7 dengan baris 1 adalah : 4845.047524177209 jarak baris 7 dengan baris 2 adalah : 5823.20738002995 jarak baris 7 dengan baris 3 adalah : 4180.604599728656 jarak baris 7 dengan baris 4 adalah : 15057.564752729737 jarak baris 7 dengan baris 5 adalah : -3510.2264620946376 jarak baris 7 dengan baris 6 adalah : 3998.344963391233 jarak baris 7 dengan baris 7 adalah : 0 Manhattan Distance, m=1 def Manahattan ( i , j ): if i != j : hasil = 0 for fitur in df : rumus = df [ fitur ][ i ] - df [ fitur ][ j ] hasil = hasil + rumus return hasil else : return 0 for xx in range ( len ( df ) - 1 ): for yy in range ( len ( df ) - 1 ): manahattan = Manahattan ( xx , yy ) print ( \"jarak baris\" , xx , \"dengan baris\" , yy , \"adalah :\" , manahattan ) Output : jarak baris 0 dengan baris 0 adalah : 0 jarak baris 0 dengan baris 1 adalah : 846 jarak baris 0 dengan baris 2 adalah : -2498 jarak baris 0 dengan baris 3 adalah : 6732 jarak baris 0 dengan baris 4 adalah : -11988 jarak baris 0 dengan baris 5 adalah : 7402 jarak baris 0 dengan baris 6 adalah : 7647 jarak baris 0 dengan baris 7 adalah : 4595 jarak baris 1 dengan baris 0 adalah : -846 jarak baris 1 dengan baris 1 adalah : 0 jarak baris 1 dengan baris 2 adalah : -3344 jarak baris 1 dengan baris 3 adalah : 5886 jarak baris 1 dengan baris 4 adalah : -12834 jarak baris 1 dengan baris 5 adalah : 6556 jarak baris 1 dengan baris 6 adalah : 6801 jarak baris 1 dengan baris 7 adalah : 3749 jarak baris 2 dengan baris 0 adalah : 2498 jarak baris 2 dengan baris 1 adalah : 3344 jarak baris 2 dengan baris 2 adalah : 0 jarak baris 2 dengan baris 3 adalah : 9230 jarak baris 2 dengan baris 4 adalah : -9490 jarak baris 2 dengan baris 5 adalah : 9900 jarak baris 2 dengan baris 6 adalah : 10145 jarak baris 2 dengan baris 7 adalah : 7093 jarak baris 3 dengan baris 0 adalah : -6732 jarak baris 3 dengan baris 1 adalah : -5886 jarak baris 3 dengan baris 2 adalah : -9230 jarak baris 3 dengan baris 3 adalah : 0 jarak baris 3 dengan baris 4 adalah : -18720 jarak baris 3 dengan baris 5 adalah : 670 jarak baris 3 dengan baris 6 adalah : 915 jarak baris 3 dengan baris 7 adalah : -2137 jarak baris 4 dengan baris 0 adalah : 11988 jarak baris 4 dengan baris 1 adalah : 12834 jarak baris 4 dengan baris 2 adalah : 9490 jarak baris 4 dengan baris 3 adalah : 18720 jarak baris 4 dengan baris 4 adalah : 0 jarak baris 4 dengan baris 5 adalah : 19390 jarak baris 4 dengan baris 6 adalah : 19635 jarak baris 4 dengan baris 7 adalah : 16583 jarak baris 5 dengan baris 0 adalah : -7402 jarak baris 5 dengan baris 1 adalah : -6556 jarak baris 5 dengan baris 2 adalah : -9900 jarak baris 5 dengan baris 3 adalah : -670 jarak baris 5 dengan baris 4 adalah : -19390 jarak baris 5 dengan baris 5 adalah : 0 jarak baris 5 dengan baris 6 adalah : 245 jarak baris 5 dengan baris 7 adalah : -2807 jarak baris 6 dengan baris 0 adalah : -7647 jarak baris 6 dengan baris 1 adalah : -6801 jarak baris 6 dengan baris 2 adalah : -10145 jarak baris 6 dengan baris 3 adalah : -915 jarak baris 6 dengan baris 4 adalah : -19635 jarak baris 6 dengan baris 5 adalah : -245 jarak baris 6 dengan baris 6 adalah : 0 jarak baris 6 dengan baris 7 adalah : -3052 jarak baris 7 dengan baris 0 adalah : -4595 jarak baris 7 dengan baris 1 adalah : -3749 jarak baris 7 dengan baris 2 adalah : -7093 jarak baris 7 dengan baris 3 adalah : 2137 jarak baris 7 dengan baris 4 adalah : -16583 jarak baris 7 dengan baris 5 adalah : 2807 jarak baris 7 dengan baris 6 adalah : 3052 jarak baris 7 dengan baris 7 adalah : 0 Euclidean distance, m=2 def Euclidean ( i , j ): if i != j : hasil = 0 for fitur in df : rumus = ( df [ fitur ][ i ] - df [ fitur ][ j ]) ** 2 hasil += rumus hasil = math . sqrt ( hasil ) return hasil else : return 0 for xx in range ( len ( df ) - 1 ): for yy in range ( len ( df ) - 1 ): euclidienc = Euclidean ( xx , yy ) print ( \"jarak baris\" , xx , \"dengan baris\" , yy , \"adalah :\" , euclidienc ) Output : jarak baris 0 dengan baris 0 adalah : 0 jarak baris 0 dengan baris 1 adalah : 6206.256359513358 jarak baris 0 dengan baris 2 adalah : 9405.507429160853 jarak baris 0 dengan baris 3 adalah : 11238.189622888554 jarak baris 0 dengan baris 4 adalah : 12098.951194215142 jarak baris 0 dengan baris 5 adalah : 4412.718436519602 jarak baris 0 dengan baris 6 adalah : 6576.310135630771 jarak baris 0 dengan baris 7 adalah : 7451.170579177476 jarak baris 1 dengan baris 0 adalah : 6206.256359513358 jarak baris 1 dengan baris 1 adalah : 0 jarak baris 1 dengan baris 2 adalah : 6506.372107403634 jarak baris 1 dengan baris 3 adalah : 13062.954260043936 jarak baris 1 dengan baris 4 adalah : 16899.20737786243 jarak baris 1 dengan baris 5 adalah : 5589.1453729528275 jarak baris 1 dengan baris 6 adalah : 8905.393028945999 jarak baris 1 dengan baris 7 adalah : 4948.484313403448 jarak baris 2 dengan baris 0 adalah : 9405.507429160853 jarak baris 2 dengan baris 1 adalah : 6506.372107403634 jarak baris 2 dengan baris 2 adalah : 0 jarak baris 2 dengan baris 3 adalah : 13395.218400608479 jarak baris 2 dengan baris 4 adalah : 16988.51806368054 jarak baris 2 dengan baris 5 adalah : 7941.333389299306 jarak baris 2 dengan baris 6 adalah : 11064.063132502453 jarak baris 2 dengan baris 7 adalah : 6914.6618861662355 jarak baris 3 dengan baris 0 adalah : 11238.189622888554 jarak baris 3 dengan baris 1 adalah : 13062.954260043936 jarak baris 3 dengan baris 2 adalah : 13395.218400608479 jarak baris 3 dengan baris 3 adalah : 0 jarak baris 3 dengan baris 4 adalah : 11549.478602950005 jarak baris 3 dengan baris 5 adalah : 10011.995605272707 jarak baris 3 dengan baris 6 adalah : 7514.343683915449 jarak baris 3 dengan baris 7 adalah : 10222.735788427675 jarak baris 4 dengan baris 0 adalah : 12098.951194215142 jarak baris 4 dengan baris 1 adalah : 16899.20737786243 jarak baris 4 dengan baris 2 adalah : 16988.51806368054 jarak baris 4 dengan baris 3 adalah : 11549.478602950005 jarak baris 4 dengan baris 4 adalah : 0 jarak baris 4 dengan baris 5 adalah : 14532.786037095571 jarak baris 4 dengan baris 6 adalah : 12253.324650885572 jarak baris 4 dengan baris 7 adalah : 15669.684393758542 jarak baris 5 dengan baris 0 adalah : 4412.718436519602 jarak baris 5 dengan baris 1 adalah : 5589.1453729528275 jarak baris 5 dengan baris 2 adalah : 7941.333389299306 jarak baris 5 dengan baris 3 adalah : 10011.995605272707 jarak baris 5 dengan baris 4 adalah : 14532.786037095571 jarak baris 5 dengan baris 5 adalah : 0 jarak baris 5 dengan baris 6 adalah : 6248.778040545208 jarak baris 5 dengan baris 7 adalah : 6110.750772204672 jarak baris 6 dengan baris 0 adalah : 6576.310135630771 jarak baris 6 dengan baris 1 adalah : 8905.393028945999 jarak baris 6 dengan baris 2 adalah : 11064.063132502453 jarak baris 6 dengan baris 3 adalah : 7514.343683915449 jarak baris 6 dengan baris 4 adalah : 12253.324650885572 jarak baris 6 dengan baris 5 adalah : 6248.778040545208 jarak baris 6 dengan baris 6 adalah : 0 jarak baris 6 dengan baris 7 adalah : 5941.4292893208785 jarak baris 7 dengan baris 0 adalah : 7451.170579177476 jarak baris 7 dengan baris 1 adalah : 4948.484313403448 jarak baris 7 dengan baris 2 adalah : 6914.6618861662355 jarak baris 7 dengan baris 3 adalah : 10222.735788427675 jarak baris 7 dengan baris 4 adalah : 15669.684393758542 jarak baris 7 dengan baris 5 adalah : 6110.750772204672 jarak baris 7 dengan baris 6 adalah : 5941.4292893208785 jarak baris 7 dengan baris 7 adalah : 0","title":"(Menghitung jarak menggunakan metode Minkowski distance, manhattan distance dan Euclidean distance)"},{"location":"TP4/","text":"Seleksi Fitur \u00b6 (Seleksi Fitur Menggunakan metode Information Gain) \u00b6 Menampilkan seluruh data dari kolom : from math import log import pandas as pd pd . read_csv ( \"feature_selection.csv\" ) Dari Tabel diatas didapat nilai-nilai Pi : play = [ 9 , 5 ] # Yes, No # attribute, number of members (feature) outlook = [ [ 4 , 0 ], # overcase [ 2 , 3 ], # sunny [ 3 , 2 ] # rain ] temperature = [ [ 2 , 2 ], # hot [ 3 , 1 ], # cool [ 4 , 2 ] # mild ] humidity = [ [ 3 , 4 ], # high [ 6 , 1 ] # normal ] windy = [ [ 6 , 2 ], # FALSE [ 3 , 3 ] # TRUE ] Entropy \u00b6 Tentukan entropy dari setiap fitur dengan menggunakan rumus : Fungsi untuk mendapatkan entropy dari fitur utama(play) : def entropy ( pi ): total = 0 for p in pi : p = p / sum ( pi ) if p != 0 : total += p * log ( p , 2 ) else : total += 0 total *= - 1 return total print ( 'entropy target = ' , entropy ( play )) Entropy fitur Play(parent) : 0.9402859586706309 Gain \u00b6 def gain ( d , a ): total = 0 for v in a : total += sum ( v ) / sum ( d ) * entropy ( v ) gain = entropy ( d ) - total return gain print ( 'gain dari outlook : ' , gain ( play , outlook )) print ( 'gain dari temprature : ' , gain ( play , temperature )) print ( 'gain dari humidity : ' , gain ( play , humidity )) print ( 'gain dari windy : ' , gain ( play , windy )) Gain dari fitur outlook : 0.2467498197744391 Gain dari fitur temperature : 0.029222565658954647 Gain dari fitur humidity : 0.15183550136234136 Gain dari fitur windy : 0.04812703040826927 Dapat Disimpulkan fitur outlook merupakan fitur yang paling berpengaruh terhadap kelasifikasi Play","title":"Seleksi Fitur (TP4)"},{"location":"TP4/#seleksi-fitur","text":"","title":"Seleksi Fitur"},{"location":"TP4/#seleksi-fitur-menggunakan-metode-information-gain","text":"Menampilkan seluruh data dari kolom : from math import log import pandas as pd pd . read_csv ( \"feature_selection.csv\" ) Dari Tabel diatas didapat nilai-nilai Pi : play = [ 9 , 5 ] # Yes, No # attribute, number of members (feature) outlook = [ [ 4 , 0 ], # overcase [ 2 , 3 ], # sunny [ 3 , 2 ] # rain ] temperature = [ [ 2 , 2 ], # hot [ 3 , 1 ], # cool [ 4 , 2 ] # mild ] humidity = [ [ 3 , 4 ], # high [ 6 , 1 ] # normal ] windy = [ [ 6 , 2 ], # FALSE [ 3 , 3 ] # TRUE ]","title":"(Seleksi Fitur Menggunakan metode Information Gain)"},{"location":"TP4/#entropy","text":"Tentukan entropy dari setiap fitur dengan menggunakan rumus : Fungsi untuk mendapatkan entropy dari fitur utama(play) : def entropy ( pi ): total = 0 for p in pi : p = p / sum ( pi ) if p != 0 : total += p * log ( p , 2 ) else : total += 0 total *= - 1 return total print ( 'entropy target = ' , entropy ( play )) Entropy fitur Play(parent) : 0.9402859586706309","title":"Entropy"},{"location":"TP4/#gain","text":"def gain ( d , a ): total = 0 for v in a : total += sum ( v ) / sum ( d ) * entropy ( v ) gain = entropy ( d ) - total return gain print ( 'gain dari outlook : ' , gain ( play , outlook )) print ( 'gain dari temprature : ' , gain ( play , temperature )) print ( 'gain dari humidity : ' , gain ( play , humidity )) print ( 'gain dari windy : ' , gain ( play , windy )) Gain dari fitur outlook : 0.2467498197744391 Gain dari fitur temperature : 0.029222565658954647 Gain dari fitur humidity : 0.15183550136234136 Gain dari fitur windy : 0.04812703040826927 Dapat Disimpulkan fitur outlook merupakan fitur yang paling berpengaruh terhadap kelasifikasi Play","title":"Gain"}]}